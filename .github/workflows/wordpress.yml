name: Hide Author Archive CI

on:
  push:
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        php: [ '7.4', '8.2' ] # PHP versions to check.
        wp: [ 'latest', '5.9' ]      # WordPress version to check.
    name: "PHP Unitest for WordPress ${{ matrix.wp }} in PHP ${{ matrix.php }}"
    uses: tarosky/workflows/.github/workflows/wp-unit-test.yml@main
    with:
        php_version: ${{ matrix.php }}
        wp_version: ${{ matrix.wp }}

  lint:
    uses: tarosky/workflows/.github/workflows/phpcs.yml@main
    with:
      version: 7.4

  status-check:
    name: Status Check
    needs: [ lint, test ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  release:
    name: Release build
    needs: status-check
    if: contains(github.ref, 'tags/')
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://ja.wordpress.org/plugins/hide-author-archive/
    steps:
      - uses: actions/checkout@main

      - name: Install Subversion
        run: sudo apt-get install subversion

      - name: Build package.
        run: bash bin/build.sh ${GITHUB_REF/refs\/tags\//}

      - name: Deploy WordPress.org
        uses: 10up/action-wordpress-plugin-deploy@stable
        with:
          generate-zip: true
        env:
          SVN_USERNAME: ${{ secrets.WP_ORG_USERNAME_TAROSKY }}
          SVN_PASSWORD: ${{ secrets.WP_ORG_PASSWORD_TAROSKY }}

      - name: Deploy Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release vesrion ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Zip
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{github.workspace}}/${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip
